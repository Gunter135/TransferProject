char *generate_random_string(int length) {
    static char charset[] = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    static char random_string[256];

    int i;
    for (i = 0; i < length; i++) {
        int key = rand() % (sizeof(charset) - 1);
        random_string[i] = charset[key];
    }
    random_string[length] = '\0';
    return random_string;
}

char str1[100] = "Hello, ";
char str2[] = "World!";

strcat(str1, str2);

lr_output_message("Concatenated String: %s", str1);


//плохо работает, даже не работает я бы сказал
char* generate_random_string(int length) {
    static char charset[] = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    char* buffer = (char*)malloc(length + 1);  // +1 for null terminator

    if (buffer == NULL) {
        lr_error_message("Memory allocation failed");
        return NULL;
    }

    for (int i = 0; i < length; i++) {
        int key = rand() % (sizeof(charset) - 1);
        buffer[i] = charset[key];
    }

    buffer[length] = '\0';  // Null-terminate
    return buffer;
}


static char *rand_string(char *str, size_t size)
{
    const char charset[] = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJK...";
    if (size) {
        --size;
        for (size_t n = 0; n < size; n++) {
            int key = rand() % (int) (sizeof charset - 1);
            str[n] = charset[key];
        }
        str[size] = '\0';
    }
    return str;
}


char* rand_string_alloc(size_t size)
{
     char *s = malloc(size + 1);
     if (s) {
         rand_string(s, size);
     }
     return s;
}

void rand_str(char *dest, size_t length) {
    char charset[] = "0123456789"
                     "abcdefghijklmnopqrstuvwxyz"
                     "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

    while (length-- > 0) {
        size_t index = (double) rand() / RAND_MAX * (sizeof charset - 1);
        *dest++ = charset[index];
    }
    *dest = '\0';
}
